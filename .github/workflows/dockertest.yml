# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI Docker test
run-name: Build Docker images and test them

on:
  push:
    branches:
      - master
      - main

  pull_request:
    types: [opened, synchronize]

  merge_group:
    types:
      - checks_requested

  # Allow manual invocation, for testing.
  workflow_dispatch:
    inputs:
      trace:
        description: 'Trace Docker build output'
        type: boolean
        default: true

# Declare default workflow permissions to be read-only.
permissions: read-all

# Cancel any previously-started but still active runs on the same branch.
concurrency:
  cancel-in-progress: true
  group: ${{github.workflow}}-${{github.event.pull_request.number||github.ref}}

jobs:
  # Run tests.
  build-and-test:
    name: Build and test Docker images
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    env:
      BUILDKIT_PROGRESS: ${{inputs.trace && 'plain' || ''}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Build Docker images
        run: docker compose build

      - name: Run C++ tests
        run: docker run --rm qsim-cxx-tests:latest

      - name: Run Python tests
        run: docker run --rm qsim-py-tests:latest

      - name: Run a sample simulation
        run: docker run --rm qsim:latest -c /qsim/circuits/circuit_q24

      - name: Test installation process
        run: |
          cd install/tests
          docker compose build
