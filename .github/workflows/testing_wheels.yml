name: Build all wheels for testing

on:
  push:
    # Build wheels when pushing to master.
    branches:
      - master

  # Build wheels for any PRs.
  pull_request:

  # Allow manual invocation, for testing.
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheel ${{matrix.variant.build}}_${{matrix.variant.arch}}
    runs-on: ${{matrix.variant.os}}
    strategy:
      fail-fast: false
      matrix:
        variant: [
          {os: macos-13, python: '3.9',  build: cp39-macosx, arch: x86_64},
          {os: macos-13, python: '3.10', build: cp310-macosx, arch: x86_64},
          {os: macos-13, python: '3.11', build: cp311-macosx, arch: x86_64},
          {os: macos-13, python: '3.12', build: cp312-macosx, arch: x86_64},
          {os: macos-13, python: '3.13', build: cp313-macosx, arch: x86_64},

          {os: macos-14, python: '3.9',  build: cp39-macosx, arch: x86_64},
          {os: macos-14, python: '3.10', build: cp310-macosx, arch: x86_64},
          {os: macos-14, python: '3.11', build: cp311-macosx, arch: x86_64},
          {os: macos-14, python: '3.12', build: cp312-macosx, arch: x86_64},
          {os: macos-14, python: '3.13', build: cp313-macosx, arch: x86_64},

          {os: macos-14, python: '3.9',  build: cp39-macosx, arch: arm64},
          {os: macos-14, python: '3.10', build: cp310-macosx, arch: arm64},
          {os: macos-14, python: '3.11', build: cp311-macosx, arch: arm64},
          {os: macos-14, python: '3.12', build: cp312-macosx, arch: arm64},
          {os: macos-14, python: '3.13', build: cp313-macosx, arch: arm64},

          {os: macos-15, python: '3.9',  build: cp39-macosx, arch: arm64},
          {os: macos-15, python: '3.10', build: cp310-macosx, arch: arm64},
          {os: macos-15, python: '3.11', build: cp311-macosx, arch: arm64},
          {os: macos-15, python: '3.12', build: cp312-macosx, arch: arm64},
          {os: macos-15, python: '3.13', build: cp313-macosx, arch: arm64},

          {os: ubuntu-24.04, python: '3.9',  build: cp39-manylinux, arch: x86_64},
          {os: ubuntu-24.04, python: '3.10', build: cp310-manylinux, arch: x86_64},
          {os: ubuntu-24.04, python: '3.11', build: cp311-manylinux, arch: x86_64},
          {os: ubuntu-24.04, python: '3.12', build: cp312-manylinux, arch: x86_64},
          {os: ubuntu-24.04, python: '3.13', build: cp313-manylinux, arch: x86_64},

        ]

          # - os: ubuntu-24.04
          #   name: manylinux_2_28
          #   cibw:
          #     arch: x86_64
          #     build: "cp39* cp310* cp311* cp312* cp313*"
          #     manylinux_image: manylinux_2_28

          # - os: windows-2019
          #   name: win_amd64
          #   architecture: x64
          #   cibw:
          #     build: "cp39-win_amd64 cp310-win_amd64 cp311-win_amd64 cp312-win_amd64 cp313-win_amd64"
    env:
      CIBW_BUILD: ${{matrix.variant.build}}_${{matrix.variant.arch}}
      CIBW_ARCHS: ${{matrix.variant.arch}}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.variant.python}}

      - name: Install cibuildwheel and twine
        run: python -m pip install cibuildwheel==2.23.3 'virtualenv==20.32'

      - name: Install requirements
        run: |
          python -m pip install -r requirements.txt
          python -m pip install cmake

      - name: Run C++ tests
        run: bash build_tools/test_libs.sh

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: python-wheels-${{matrix.variant.build}}_${{matrix.variant.arch}}
          path: ./wheelhouse/*.whl
